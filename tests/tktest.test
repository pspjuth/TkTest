#------------------------------------------------------------*- tcl -*-
# Tests for TkTest                             
#----------------------------------------------------------------------
# $Revision: 1.7 $
#----------------------------------------------------------------------

package require TkTest
#wm withdraw .
exec tests/tktesttest.tcl &
after 1000
# Helper to test coverage using Nagelfar
if {[info exists ::_instrument_::log]} {
    send TkTestTest [list namespace eval ::_instrument_ {}]
    send TkTestTest [list array set ::_instrument_::log [array get ::_instrument_::log]]
}
tktest::init TkTestTest

test tktest-1.1 widget -body {
    tktest::widget -class Button
} -returnCodes 1 -result * -match glob

test tktest-1.2 widget -body {
    tktest::widget -class Button -text C*
} -result .b3

test tktest-1.3 widget -body {
    tktest::widget -class Button -pos 1
} -result .b2

test tktest-1.4 widget -body {
    tktest::widget -class Button -pos 2
} -result .b3

test tktest-1.5 widget -body {
    tktest::widget -class Button -pos 3
} -result .b4

test tktest-1.6 widget -body {
    tktest::widget -class C* -text *2
} -result .b6

test tktest-1.7 widget -body {
    tktest::widget -class Label -pos 0
} -result .l1

test tktest-2.1 press -body {
    set res ""
    tktest::press Apa
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
    tktest::press Bepa
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
} -result "Apa Bepa"

test tktest-3.1 menu -body {
    set res ""
    tktest::menu Edit Copy
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
    tktest::menu Edit Paste
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
} -result "Copy Paste"

test tktest-4.1 coord -body {
    tktest::coord [tktest::widget -class ListBox]
} -result "50 100"

test tktest-4.2 coord -body {
    set r1 [tktest::coord [tktest::widget -class ListBox] bbox 2]
    set r2 [tktest::coord [tktest::widget -class ListBox] bbox 3]
    foreach {x1 y1} $r1 break
    foreach {x2 y2} $r2 break
    # Skip absolute check, just sanity check coordinates
    if {abs($x1 - $x2) > 1 || $y1 >= $y2} {
        list $r1 $r2
    } else {
        set res 0
    }
} -result 0

test tktest-5.1 mouse -body {
    set lb [tktest::widget -class ListBox]
    set res {}
    tktest::mouse left [tktest::coord $lb bbox 1]
    lappend res [tktest::cmd $lb curselection]
    tktest::mouse 1    [tktest::coord $lb bbox 3]
    lappend res [tktest::cmd $lb curselection]
} -result {1 3}

test tktest-5.2 mouse -body {
    set w [tktest::widget -class Label -pos 1]
    set res {}
    tktest::menu Edit Copy
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]

    tktest::mouse right [tktest::coord $w]
    tktest::menu Miffo
    tktest::key Escape
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
} -result {Copy Miffo}

test tktest-5.3 mouse -body {
    set w [tktest::widget -class Label -pos 1]
    set res {}
    tktest::contextMenu [tktest::coord $w] Maffo
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
} -result {Maffo}

test tktest-6.1 key -body {
    set w [tktest::widget -class Entry]
    set res {}
    tktest::menu Edit Copy
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
    lappend res [tktest::cmd $w get]

    tktest::cmd focus $w
    tktest::key End
    tktest::key A
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]

    tktest::key Home Shift
    tktest::key B
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]

} -result {Copy Copy CopyA B}

test tktest-6.2 keys -body {
    set w [tktest::widget -class Entry]
    set res {}
    tktest::menu Edit Copy
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]

    tktest::cmd focus $w
    tktest::key End
    tktest::keys "Abra Kadabra0"
    lappend res [tktest::widget -class Label -pos 0 -eval "cget -text"]
} -result {Copy {CopyAbra Kadabra0}}

test tktest-6.3 keys -body {
    set w [tktest::widget -class Text]
    tktest::cmd $w delete 1.0 end
    set res {}

    tktest::cmd focus $w
    tktest::keys "0\nx y+-"
    lappend res [tktest::cmd $w get 1.0 end-1c]
} -result [list "0\nx y+-"]

# Helper to test coverage using Nagelfar
if {[info exists ::_instrument_::log]} {
    set x [tktest::cmd array get ::_instrument_::log]
    foreach {key val} $x {
        if {$val > 0} {
            set ::_instrument_::log($key) $val
        }
    }
}

send -async TkTestTest exit
